generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categories {
  id                 Int        @id @default(autoincrement())
  description        String
  description_seo    String
  favorite           Boolean    @default(false)
  is_active          Boolean    @default(true)
  is_main            Boolean    @default(false)
  key_word_seo       String?    
  name               String     @unique
  firebase_id        String?
  sub_category_id    Int?
  order              Int        @unique
  url                String?
  all_product        Boolean    @default(true)
  urlPicture         String?
  order_all_products Int?
  filter             Json       @default("[]")
  created_at         DateTime?  @default(now())
  updated_at         DateTime?  @default(now())
  Home               Home[]
  Products           Products[]

  @@map("categories")
}

model Home {
  id           Int        @id @default(autoincrement())
  description  String
  destaque     Boolean    @default(false)
  icon         String?
  link_name    String?
  name         String
  indexProduct Int
  category_id  Int
  urls         Json
  created_at   DateTime?  @default(now())
  updated_at   DateTime?  @default(now())
  category     Categories @relation(fields: [category_id], references: [id])

  @@map("home")
}

model Orcamento {
  id          Int       @id @default(autoincrement())
  description String?
  email       String
  isAprove    Boolean
  lastName    String
  name        String
  telephone   String
  products    Json?
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())

  @@map("orcamentos")
}

model Products {
  id              Int        @id @default(autoincrement())
  description     String
  description_seo String
  destaque        Boolean    @default(false)
  hasVariation    Boolean    @default(false)
  isActive        Boolean    @default(true)
  key_word_seo    String
  name            String     @unique
  listVariation   Json?
  tab             Json?
  urls            Json?
  category_id     Int
  call_product    String
  order           Int?       @unique
  created_at      DateTime?  @default(now())
  layout          Int?
  updated_at      DateTime?  @default(now())
  category        Categories @relation(fields: [category_id], references: [id])

  @@map("products")
}

model Logs {
  id          Int      @id @default(autoincrement())
  user        String
  description String
  before      Json?
  after       Json?
  created_at  DateTime @default(now())

  @@map("logs")
}

model RedirectsUrls {
  id          Int       @id @default(autoincrement())
  source      String    @db.VarChar(255)
  destination String    @db.VarChar(255)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now())

  @@map("redirect_urls")
}

model Files {
  id         Int       @id @default(autoincrement())
  url        String
  created_at DateTime  @default(now())
  name       String?
  updated_at DateTime? @default(now())

  @@map("files")
}

model Users {
  id         Int       @id @default(autoincrement())
  name       String
  email      String
  password   String
  super_adm  Boolean   @default(true)
  is_active  Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}
